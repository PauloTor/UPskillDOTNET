@model PaginatedList<PseudoFront_.Models.Cliente>

@{
    ViewData["Title"] = "Lista de Clientes";
}

<h1>Clientes</h1>

<p>
    <div>
        <a asp-action="Create">Criar novo cliente</a>
    </div>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Pesquisa por nome: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Pesquisar" class="btn btn-default" />
            <a asp-action="Index">Voltar à lista completa</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a>Nome</a>
            </th>
            <th>
                <a>Email</a>
            <th>
                <a>NIF</a>
            </th>
            <th>
                <a>Metodo Pagamento</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.NomeCliente)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmailCliente)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NifCliente)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MetodoPagamento)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ClienteID">Editar</a> |
                    <a asp-action="Details" asp-route-id="@item.ClienteID">Detalhes</a> |
                    <a asp-action="Delete" asp-route-id="@item.ClienteID">Apagar</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Anterior
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Seguinte
</a>
